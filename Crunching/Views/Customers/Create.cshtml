@model Crunching.Models.Customers

@{
    ViewBag.Title = "Create";
    Layout = null;
}

@Html.Partial("InitProducts")

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

		<div class="main-content">
			<div class="page-content">
                <div class="alert alert-success" role="alert">When creating a new customer please make sure that you send him the LinkID provided in the customer overview. The customer should enter that when first launching the mobile app</div>
                @using (Html.BeginForm())
                {
                    @Html.ValidationSummary(true)
					<div class="row-fluid">
						<div class="span10">
							<!--PAGE CONTENT BEGINS-->
                            <h3 class="header smaller lighter blue">Create a new Customer</h3>
                            <div class="widget-box">
								<div class="widget-header">
									<h4>Customer Data</h4>
								</div>
                                <div class="widget-body">
									<div class="widget-main">
                                        <div class="control-group">
									        <label class="control-label">Company Name</label>
                                            @Html.EditorFor(model => model.name, new { @class = "span12" })
								        </div> 
                                    </div>
								</div>
                                <div class="widget-body">
									<div class="widget-main">
                                        <div class="control-group">
									        <label class="control-label">Country</label>
                                            @Html.DropDownListFor(model => model.idCountry, new SelectList(ViewBag.lCountries, "id", "Name", Model.idCountry), new { @class = "form-span12" })
								        </div> 
                                    </div>
								</div>
							</div>
                            <div class="widget-body">
						        <div class="widget-main">
                                    <div class="control-group">
								        <label class="control-label">Key Account Manager</label>
                                   
                                        <table border="0" cellpadding="3" cellspacing="0" >
                                            <tr>
                                                <td>
                                                    <select multiple id="KAMs" name="KAMs" class = "form-span3" style="width:200px; height:300px">
                                                        @foreach (Crunching.Models.vUsers item in ViewBag.lKAMs)
                                                        {
                                                            <option value="@item.id">@item.firstName @item.lastName</option>}
                                                    </select>
                                                </td>
                                                <td align="center" valign="middle">
                                                    <input type="Button" class="btn" value="Add >>" style="width:100px" onClick="SelectMoveKAMsRight()"/><br/>
                                                    <br/>
                                                    <input type="Button" class="btn" value="<< Remove" style="width:100px" onClick="SelectMoveKAMsLeft()"/>
                                                </td>
                                                <td>
                                                    <select id="assignedKAMs" name="assignedKAMs" size="9" MULTIPLE style="width:200px; height:300px">
                                                        
                                                    </select>
                                                </td>
                                            </tr>
                                        </table>

							        </div> 
                                </div>
					        </div>
                            <div class="widget-body">
						        <div class="widget-main">
                                    <div class="control-group">
								        <label class="control-label">Products</label>
                                        <table border="0" cellpadding="3" cellspacing="0" >
                                            <tr>
                                                <td>
                                                    <select multiple id="series" name="series" class = "form-span3" onclick="getProducts()" style="height:300px">
                                                        @foreach (Crunching.Models.Series item in ViewBag.lSeries)
                                                        {
                                                            <option value="@item.id">@item.text</option>}
                                                    </select>
                                                </td>
                                                <td>
                                                    <select multiple id="products" name="products" class = "form-span3" style="width:200px; height:300px">
                                                        @foreach (Crunching.Models.Products item in ViewBag.lProducts)
                                                        {
                                                            <option value="@item.id">@item.type</option>}
                                                    </select>
                                                </td>
                                                <td align="center" valign="middle">
                                                    <input type="Button" class="btn" value="Add >>" style="width:100px" onClick="SelectMoveRowsRight()"/><br/>
                                                    <br/>
                                                    <input type="Button" class="btn" value="<< Remove" style="width:100px" onClick="SelectMoveRowsLeft()"/>
                                                </td>
                                                <td>
                                                    <select id="assignedProducts" name="assignedProducts" size="9" MULTIPLE style="width:200px; height:300px">
                                                        
                                                    </select>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
				            <div class="widget-body">
						    <div class="widget-main">
                                <div class="control-group">
								    <label class="control-label">Documents</label>
                                    <table border="0" cellpadding="3" cellspacing="0" >
                                        <tr>
                                            <td>
                                                <select multiple id="docsCategories" name="docsCategories" class = "form-span3" onclick="getDocs()" style="height:300px">
                                                    @foreach (var item in ViewBag.lDocsCategories)
                                                    {
                                                        <option value="@item.id">@item.category</option>}
                                                </select>
                                            </td>
                                            <td>
                                                <select multiple id="docs" name="docs" class = "form-span3" style="width:200px; height:300px">
                                                    @foreach (Crunching.Models.GeneralProductsDocuments item in ViewBag.lDocs)
                                                    {
                                                        <option value="@item.id">@item.filename</option>}
                                                </select>
                                            </td>
                                            <td align="center" valign="middle">
                                                <input type="Button" class="btn" value="Add >>" style="width:100px" onClick="docsSelectMoveRowsRight()"/><br/>
                                                <br/>
                                                <input type="Button" class="btn" value="<< Remove" style="width:100px" onClick="docsSelectMoveRowsLeft()"/>
                                            </td>
                                            <td>
                                                <select id="assignedDocs" name="assignedDocs" size="9" MULTIPLE style="width:200px; height:300px">
                                                    @foreach (Crunching.Models.vDocsCustomers item in ViewBag.lAssignedDocs)
                                                    {
                                                        <option >@item.filename</option>
                                                    }
                                                </select>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                            <div class="form-actions">
           					    <button class="btn btn-info" type="button" onclick="SubmitEditCustomerForm()">
									<i class="icon-ok bigger-110"></i>
									Save
								</button>
								&nbsp; &nbsp; &nbsp;
								<button class="btn" type="reset" onclick="javascript:location.href='@Url.Action("Index")'">
									<i class="icon-undo bigger-110"></i>
									Cancel
								</button>
							</div>
							<!--PAGE CONTENT ENDS-->
						</div><!--/.span-->
					</div><!--/.row-fluid-->
                }
				</div><!--/.page-content-->

				
			</div><!--/.main-content-->

@Html.Partial("end")


<script>
    function removeOptions(selectbox) {
        var i;
        for (i = selectbox.options.length - 1; i >= 0; i--) {
            selectbox.remove(i);
        }
    }

    function addToDocsSelect(data) {
        $.each(data, function (i, obj) {
            $('#docs').append($('<option>').text(obj.filename).attr('value', obj.id));
        });
    }

    function getDocs() {
        var categories = document.getElementById("docsCategories");
        var idCategory = categories.options[categories.selectedIndex].value;
        var docs = document.getElementById("docs");

        $.ajax({
            url: '@Url.Action("getDocsByCategory", "Documents")',
            type: 'POST',
            data: { idCategory: idCategory },
            success: function (data) {
                console.log(JSON.stringify(data));
                removeOptions(docs); 
                addToDocsSelect(data);                
            }
            , error: function (xhr, status, err) {
                if (xhr.status = 400) alert("Error, bad data in parameters = " + err + ". Please contact GTP.");
                else alert("Error = " + xhr.status);
            }
        });
    }
</script>

<script type="text/javascript">

    function removeOptions(selectbox) {
        var i;
        for (i = selectbox.options.length - 1; i >= 0; i--) {
            selectbox.remove(i);
        }
    }

    function addToProductsSelect(data) {
        $.each(data, function (i, obj) {
            $('#products').append($('<option>').text(obj.type).attr('value', obj.id));
        });
    }

    function getProducts() {
        var series = document.getElementById("series");
        var idSerie = series.options[series.selectedIndex].value;
        var products = document.getElementById("products");

        $.ajax({
            url: '@Url.Action("getAllProducts", "Customers")',
            type: 'POST',
            data: { idSerie: idSerie },
            success: function (data) {
                console.log(JSON.stringify(data));
                removeOptions(products); addToProductsSelect(data);
                console.log(JSON.stringify(data));
            }
            , error: function (xhr, status, err) {
                if (xhr.status = 400) alert("Error, bad data in parameters = " + err + ". Please contact GTP.");
                else alert("Error = " + xhr.status);
            }
        });

    }

</script>

<script type="text/javascript">
    function SelectMoveRowsRight() {
        var SS1 = document.getElementById("products");
        var SS2 = document.getElementById("assignedProducts");
        var SelID = '';
        var SelText = '';
        // Move rows from SS1 to SS2 from bottom to top
        for (i = SS1.options.length - 1; i >= 0; i--) {
            if (SS1.options[i].selected == true) {
                if (SS1.options[i] != "") {
                    var exists = false; // if already exists dont move
                    for (j = SS2.options.length - 1; j >= 0; j--) {
                        console.log(SS2.options[j].text + " -- " + SS1.options[i].text);
                        if (SS2.options[j].text === SS1.options[i].text)
                            exists = true;
                    }
                    if (exists == false) {
                        SelID = SS1.options[i].value;
                        SelText = SS1.options[i].text;
                        var newRow = new Option(SelText, SelID);
                        SS2.options[SS2.length] = newRow;
                        SS1.options[i] = null;
                    }
                }
            }
        }
    }
    function SelectMoveRowsLeft() {
        var SS1 = document.getElementById("assignedProducts");
        var SS2 = document.getElementById("products");
        var SelID = '';
        var SelText = '';
        for (i = SS1.options.length - 1; i >= 0; i--) {
            if (SS1.options[i].selected == true) {
                if (SS1.options[i] != "") {
                    var exists = false; // if already exists dont move
                    for (j = SS2.options.length - 1; j >= 0; j--) {
                        console.log(SS2.options[j].text + " -- " + SS1.options[i].text);
                        if (SS2.options[j].text === SS1.options[i].text)
                            exists = true;
                    }
                    if (exists == false) {
                        SelID = SS1.options[i].value;
                        SelText = SS1.options[i].text;
                        var newRow = new Option(SelText, SelID);
                        SS2.options[SS2.length] = newRow;
                        SS1.options[i] = null;
                    }
                    else SS1.options[i] = null;
                }
            }
        }
    }

    function SubmitEditCustomerForm() {
        console.log("SubmitEditCustomerForm ");
        $("#assignedProducts option").attr("selected", "selected");
        $("#assignedKAMs option").attr("selected", "selected");
        $("#assignedDocs option").attr("selected", "selected");

        document.forms[0].submit();
    }
</script>


<script type="text/javascript">
    function docsSelectMoveRowsRight() {
        var SS1 = document.getElementById("docs");
        var SS2 = document.getElementById("assignedDocs");
        var SelID = '';
        var SelText = '';
        // Move rows from SS1 to SS2 from bottom to top
        for (i = SS1.options.length - 1; i >= 0; i--) {
            if (SS1.options[i].selected == true) {
                if (SS1.options[i] != "") {
                    var exists = false; // if already exists dont move
                    for (j = SS2.options.length - 1; j >= 0; j--) {
                        console.log(SS2.options[j].text + " -- " + SS1.options[i].text);
                        if (SS2.options[j].text === SS1.options[i].text)
                            exists = true;
                    }
                    if (exists == false) {
                        SelID = SS1.options[i].value;
                        SelText = SS1.options[i].text;
                        var newRow = new Option(SelText, SelID);
                        SS2.options[SS2.length] = newRow;
                        SS1.options[i] = null;
                    }
                }
            }
        }
    }
    function docsSelectMoveRowsLeft() {
        var SS1 = document.getElementById("assignedDocs");
        var SS2 = document.getElementById("docs");
        var SelID = '';
        var SelText = '';
        for (i = SS1.options.length - 1; i >= 0; i--) {
            if (SS1.options[i].selected == true) {
                if (SS1.options[i] != "") {
                    var exists = false; // if already exists dont move
                    for (j = SS2.options.length - 1; j >= 0; j--) {
                        console.log(SS2.options[j].text + " -- " + SS1.options[i].text);
                        if (SS2.options[j].text === SS1.options[i].text)
                            exists = true;
                    }
                    if (exists == false) {
                        SelID = SS1.options[i].value;
                        SelText = SS1.options[i].text;
                        var newRow = new Option(SelText, SelID);
                        SS2.options[SS2.length] = newRow;
                        SS1.options[i] = null;
                    }
                    else SS1.options[i] = null;
                }
            }
        }
    }   
</script>


<script type="text/javascript">
    function SelectMoveKAMsRight() {
        var SS1 = document.getElementById("KAMs");
        var SS2 = document.getElementById("assignedKAMs");
        var SelID = '';
        var SelText = '';
        // Move rows from SS1 to SS2 from bottom to top
        for (i = SS1.options.length - 1; i >= 0; i--) {
            if (SS1.options[i].selected == true) {
                if (SS1.options[i] != "") {
                    var exists = false; // if already exists dont move
                    for (j = SS2.options.length - 1; j >= 0; j--) {
                        console.log(SS2.options[j].text + " -- " + SS1.options[i].text);
                        if (SS2.options[j].text === SS1.options[i].text)
                            exists = true;
                    }
                    if (exists == false) {
                        SelID = SS1.options[i].value;
                        SelText = SS1.options[i].text;
                        var newRow = new Option(SelText, SelID);
                        SS2.options[SS2.length] = newRow;
                        SS1.options[i] = null;
                    }
                }
            }
        }
    }
    function SelectMoveKAMsLeft() {
        var SS1 = document.getElementById("assignedKAMs");
        var SS2 = document.getElementById("KAMs");
        var SelID = '';
        var SelText = '';
        for (i = SS1.options.length - 1; i >= 0; i--) {
            if (SS1.options[i].selected == true) {
                if (SS1.options[i] != "") {
                    var exists = false; // if already exists dont move
                    for (j = SS2.options.length - 1; j >= 0; j--) {
                        console.log(SS2.options[j].text + " -- " + SS1.options[i].text);
                        if (SS2.options[j].text === SS1.options[i].text)
                            exists = true;
                    }
                    if (exists == false) {
                        SelID = SS1.options[i].value;
                        SelText = SS1.options[i].text;
                        var newRow = new Option(SelText, SelID);
                        SS2.options[SS2.length] = newRow;
                        SS1.options[i] = null;
                    }
                    else SS1.options[i] = null;
                }
            }
        }
    }

   
</script>
